{"version":3,"file":"main.6fb0b9372e16fdf29fb5.bundle.js","sources":["webpack:///./src/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as Treeviz from \"treeviz\";\nimport { ExtendedHierarchyPointNode } from \"treeviz/dist/typescript/typings\";\n\ntype NodeType = ExtendedHierarchyPointNode & {\n  x0: number;\n  y0: number;\n  settings: { nodeWidth: number; nodeHeight: number; duration: number };\n};\n\ninterface ITreeConfig {\n  data: any[];\n  idKey: string;\n  relationnalField: string;\n  hasFlatData: boolean;\n  nodeWidth: number;\n  nodeHeight: number;\n  mainAxisNodeSpacing: number | \"auto\";\n  secondaryAxisNodeSpacing: number;\n  renderNode: (node: NodeType) => string | null;\n  nodeColor: (node: NodeType) => string;\n  linkShape: \"orthogonal\" | \"quadraticBeziers\" | \"curve\" | \"\";\n  linkColor: (node: NodeType) => string;\n  linkWidth: (node: NodeType) => number;\n  onNodeClick: (node: NodeType) => void;\n  onNodeMouseEnter: (node: NodeType) => void;\n  onNodeMouseLeave: (node: NodeType) => void;\n  isHorizontal: boolean;\n  hasPanAndZoom: boolean;\n  duration: number;\n  marginTop: number;\n  marginBottom: number;\n  marginLeft: number;\n  marginRight: number;\n  areaHeight: number;\n  areaWidth: number;\n}\n\nexport class TreevizReact extends React.Component<Partial<ITreeConfig>> {\n  static defaultProps = {\n    nodeWidth: 80,\n    nodeHeight: 120,\n    mainAxisNodeSpacing: 1.3,\n    renderNode: () => \"\",\n    onNodeClick: () => undefined,\n    onNodeMouseEnter: () => undefined,\n    onNodeMouseLeave: () => undefined,\n    duration: 700,\n    isHorizontal: true,\n    hasFlatData: true,\n    secondaryAxisNodeSpacing: 1.25,\n    hasPanAndZoom: true,\n    relationnalField: \"father\",\n    linkWidth: () => 3,\n    linkShape: \"orthogonal\",\n    linkColor: () => \"#dddddd\",\n    idKey: \"id\",\n    areaHeight: 500,\n    areaWidth: 800\n  };\n  state = {\n    id: \"tree\" + Math.floor(Math.random() * 1000000)\n  };\n  componentDidMount() {\n    const {} = this.props;\n    // @ts-ignore\n    this.treeviz = Treeviz.create({\n      // @ts-ignore\n      htmlId: this.state.id,\n      ...this.props\n    });\n    // @ts-ignore\n    this.treeviz.refresh(this.props.data);\n  }\n  componentDidUpdate() {\n    // @ts-ignore\n\n    this.treeviz.refresh(this.props.data, this.props);\n  }\n  render() {\n    return (\n      <div\n        id={this.state.id}\n        style={{ width: this.props.areaWidth, height: this.props.areaHeight }}\n      />\n    );\n  }\n}\n"],"mappings":"AAsCA","sourceRoot":""}